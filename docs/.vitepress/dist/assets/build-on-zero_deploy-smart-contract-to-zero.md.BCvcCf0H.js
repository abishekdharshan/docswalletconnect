import{_ as a,c as s,o as t,a3 as e}from"./chunks/framework.DvZFJSJc.js";const g=JSON.parse('{"title":"How to deploy a smart-contract to ZERϴ","description":"","frontmatter":{},"headers":[],"relativePath":"build-on-zero/deploy-smart-contract-to-zero.md","filePath":"build-on-zero/deploy-smart-contract-to-zero.md"}'),i={name:"build-on-zero/deploy-smart-contract-to-zero.md"},n=e(`<h1 id="how-to-deploy-a-smart-contract-to-zerθ" tabindex="-1">How to deploy a smart-contract to ZERϴ <a class="header-anchor" href="#how-to-deploy-a-smart-contract-to-zerθ" aria-label="Permalink to &quot;How to deploy a smart-contract to ZERϴ&quot;">​</a></h1><p>Deploying a smart contract to ZERϴ is a straightforward process that is similar to deploying contracts in the zkSync Era. The only difference lies in the network settings, which can be set differently depending on the tooling.</p><p>Below we describe the process for both <strong>Hardhat</strong> and <strong>Foundry</strong>.</p><h2 id="hardhat" tabindex="-1">Hardhat <a class="header-anchor" href="#hardhat" aria-label="Permalink to &quot;Hardhat&quot;">​</a></h2><p>Hardhat is the most popular tool for development, testing, deploying and verifying contracts.</p><h3 id="set-up-plugins" tabindex="-1">Set up plugins <a class="header-anchor" href="#set-up-plugins" aria-label="Permalink to &quot;Set up plugins&quot;">​</a></h3><p>To make Hardhat compatible with the ZERϴ Network, add zkSync&#39;s plugins to Hardhat&#39;s configuration file.</p><p>The main plugin you will need is <a href="https://docs.zksync.io/build/tooling/hardhat/hardhat-zksync" target="_blank" rel="noreferrer">@matterlabs/hardhat-zksync</a>. It incapsulates all the necessary plugins and provides convenient methods to access them.</p><p>For compiling smart contracts written in Solidity or Vyper, you&#39;ll use <code>@matterlabs/hardhat-zksync-solc</code> or <code>@matterlabs/hardhat-zksync-vyper</code> respectively.</p><p>You will also need <code>hardhat-zksync-deploy</code> for deploying regular smart contracts and <code>hardhat-zksync-upgradable</code> for upgradable smart contracts.</p><p>Click <a href="https://docs.zksync.io/build/tooling/hardhat/getting-started" target="_blank" rel="noreferrer">here</a> to learn more about these plugins and their configurations.</p><h3 id="configure-networks" tabindex="-1">Configure networks <a class="header-anchor" href="#configure-networks" aria-label="Permalink to &quot;Configure networks&quot;">​</a></h3><p>The following is an additional network setting required to work with ZeZERϴro Network.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  zeroTestnet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://rpc.zksync.caldera.dev&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    zksync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ethNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sepolia&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    verifyURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://explorer.zksync.caldera.dev/contract_verification&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="foundry" tabindex="-1">Foundry <a class="header-anchor" href="#foundry" aria-label="Permalink to &quot;Foundry&quot;">​</a></h2><h3 id="install-forked-version-of-foundry" tabindex="-1">Install forked version of Foundry <a class="header-anchor" href="#install-forked-version-of-foundry" aria-label="Permalink to &quot;Install forked version of Foundry&quot;">​</a></h3><p>Instead of the official version of foundry, <code>foundry-zksync</code> should be used. It is a specialized fork of <a href="https://github.com/foundry-rs/foundry" target="_blank" rel="noreferrer"><strong>Foundry</strong></a>, tailored for zkSync Stack networks. Note, that <code>foundry-zksync</code> is currently in its <strong>alpha stage.</strong></p><p>The full instructions for installation and initial setup can be found <a href="https://docs.zksync.io/build/tooling/foundry/getting-started" target="_blank" rel="noreferrer">here</a>.</p><h3 id="network-parameters" tabindex="-1">Network parameters <a class="header-anchor" href="#network-parameters" aria-label="Permalink to &quot;Network parameters&quot;">​</a></h3><p>All foundry commands have additional <code>--rpc-url</code> , <code>--chain</code> , and <code>--zksync</code> parameters.</p><p>The following is the example use of these parameters in ZERϴ Network case.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rpc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//rpc.zksync.caldera.dev --chain 111222333 --zksync</span></span></code></pre></div>`,22),r=[n];function o(l,h,d,p,c,k){return t(),s("div",null,r)}const u=a(i,[["render",o]]);export{g as __pageData,u as default};
